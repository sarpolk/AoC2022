geom_smooth(aes(color = group), method = "lm", se = F, alpha = .5) +
facet_wrap(~name, scales = "free") +
theme_bw()
vars <- unique(toPlot$name)
groups <- unique(toPlot$group)
for (i in 1:length(vars)){
print(vars[i])
print(cor.test((toPlot %>% filter(name == vars[i], tp == "A"))$logPercLesion,
(toPlot %>% filter(name == vars[i], tp == "A"))$value))
print(cor.test((toPlot %>% filter(name == vars[i], tp == "diff"))$logPercLesion,
(toPlot %>% filter(name == vars[i], tp == "A"))$value))
print(cor.test((toPlot %>% filter(name == vars[i], tp == "diff"))$logPercLesion,
(toPlot %>% filter(name == vars[i], tp == "diff"))$value))
}
#age baseline
#edu at T1-change, p = .051
#bmi at T1-change, p = .069
#hip-to-waist change-change
for (i in 1:length(vars)){
print(vars[i])
for (g in 1:4){
print(groups[g])
print(cor.test((toPlot %>% filter(name == vars[i], group == groups[g], tp == "diff"))$logPercLesion,
(toPlot %>% filter(name == vars[i], group == groups[g], tp == "A"))$value))
print(cor.test((toPlot %>% filter(name == vars[i], group == groups[g], tp == "diff"))$logPercLesion,
(toPlot %>% filter(name == vars[i], group == groups[g], tp == "diff"))$value))
}
}
#age A-change: EG p = .059 (+), LEG p = .090 (+)
#hip-to-waist change-change: LG p = .062 (-), LEG p = .003*
#bmi A-change: LEG p = .033*
#bp systolic A-change: EG p = .011* (wrong direction)
#bp systolic change-change: LG p = .004* (wrong direction), EG p = .053
toPlot <- toPlot %>%
pivot_wider(names_from = name, values_from = value) %>%
pivot_longer(!vpid:tp) %>%
filter(tp == "diff" & name == "logPercLesion" | tp == "A" & name != "logPercLesion") %>%
pivot_wider(names_from = c(name, tp), values_from = value) %>%
pivot_longer(!c(vpid:group, logPercLesion_diff))
ggplot(toPlot, aes(x = value, y = logPercLesion_diff)) +
geom_point(aes(fill = group), shape = 21) +
geom_smooth(color = "black", method = "lm", se = F, alpha = .5) +
geom_smooth(aes(color = group), method = "lm", se = F, alpha = .5) +
facet_wrap(~name, scales = "free") +
theme_bw()
toPlot <- toPlot %>%
filter(name %in% c("sex_A", "edu_A"))
ggplot(toPlot, aes(x = as.factor(value), y = logPercLesion_diff)) +
geom_boxplot(alpha = .2, outlier.shape = NA, position = position_dodge(.8)) +
geom_point(aes(fill = group), shape = 21, position = position_jitterdodge(jitter.width = .05, dodge.width = .8)) +
# scale_color_brewer(palette = "Blues") +
facet_wrap(~name, scales = "free") +
theme_bw()
# ----------------------------------
# Some stats
toStats <- dat %>%
mutate(logPercLesion = log10(percLesion + .001))
res.aov <- anova_test(data = toStats, dv = logPercLesion, wid = vpid, within = tp)
get_anova_table(res.aov)
# Effect  DFn    DFd     F     p p<.05      ges
# 1     tp 1.89 243.29 0.868 0.415       9.55e-05
res.aov.ACG <- anova_test(data = (toStats %>% filter(group == "Active control")), dv = logPercLesion, wid = vpid, within = tp)
get_anova_table(res.aov.ACG)
# Effect DFn DFd     F     p p<.05      ges
# 1     tp   2  62 1.676 0.196       0.000465
res.aov.LG <- anova_test(data = (toStats %>% filter(group == "Language")), dv = logPercLesion, wid = vpid, within = tp)
get_anova_table(res.aov.LG)
# Effect DFn DFd     F     p p<.05      ges
# 1     tp   2  60 0.376 0.688       0.000184
res.aov.EG <- anova_test(data = (toStats %>% filter(group == "Exercise")), dv = logPercLesion, wid = vpid, within = tp)
get_anova_table(res.aov.EG)
# Effect DFn DFd     F     p p<.05      ges
# 1     tp   2  74 0.106 0.899       5.42e-05
res.aov.LEG <- anova_test(data = (toStats %>% filter(group == "Combined")), dv = logPercLesion, wid = vpid, within = tp)
get_anova_table(res.aov.LEG)
# Effect DFn DFd     F     p p<.05      ges
# 1     tp   2  56 0.847 0.434       0.000451
# test for group differences in change
res.aov.grouptime <- anova_test(data = toStats, dv = logPercLesion, wid = vpid, within = tp, between = group)
get_anova_table(res.aov.grouptime)
# Effect  DFn    DFd     F     p p<.05      ges
# 1    group 3.00 126.00 1.842 0.143       0.041000
# 2       tp 1.89 237.75 0.905 0.401       0.000105
# 3 group:tp 5.66 237.75 0.532 0.773       0.000185
ggplot(toPlot, aes(x = tp, y = logPercLesion)) +
geom_violin(fill = "black", alpha = .1) +
geom_boxplot(width = .1, outlier.shape = NA) +
geom_line(aes(x = x, group = vpid), alpha = .1) +
geom_point(aes(x = x, fill = group), size = 2, alpha = .6, shape = 21) +
facet_grid(.~group) +
theme_bw()
toPlot <- dat %>%
mutate(x = case_when(tp == "A" ~ 1,
tp == "B" ~ 2,
tp == "C" ~ 3),
x = jitter(x))
ggplot(toPlot, aes(x = tp, y = percLesion)) +
geom_violin(fill = "black", alpha = .1) +
geom_boxplot(width = .1, outlier.shape = NA) +
geom_line(aes(x = x, group = vpid), alpha = .1) +
geom_point(aes(x = x, fill = group), size = 2, alpha = .6, shape = 21) +
facet_grid(.~group) +
theme_bw()
ggplot(toPlot, aes(x = percLesion)) +
geom_histogram()
agostino.test(toPlot$percLesion)
toPlot <- toPlot %>%
mutate(logPercLesion = log10(percLesion + .001),
sqrtPercLesion = sqrt(percLesion + .001),
inversePercLesion = 1/(percLesion + .001))
ggplot(toPlot, aes(x = logPercLesion)) +
geom_histogram()
agostino.test(toPlot$logPercLesion)
ggplot(toPlot, aes(x = tp, y = logPercLesion)) +
geom_violin(fill = "black", alpha = .1) +
geom_boxplot(width = .1, outlier.shape = NA) +
geom_line(aes(x = x, group = vpid), alpha = .1) +
geom_point(aes(x = x, fill = group), size = 2, alpha = .6, shape = 21) +
facet_grid(.~group) +
theme_bw()
ggplot(toPlot, aes(x = tp, y = logPercLesion)) +
geom_violin(fill = "black", alpha = .1) +
geom_boxplot(width = .1, outlier.shape = NA) +
geom_line(aes(x = x, group = vpid), alpha = .1) +
geom_point(aes(x = x, fill = group), size = .5, alpha = .6, shape = 21) +
facet_grid(.~group) +
theme_bw()
ggplot(toPlot, aes(x = tp, y = logPercLesion)) +
geom_violin(fill = "black", alpha = .1) +
geom_boxplot(width = .3, outlier.shape = NA) +
geom_line(aes(x = x, group = vpid), alpha = .1) +
geom_point(aes(x = x, fill = group), size = .5, alpha = .6, shape = 21) +
facet_grid(.~group) +
theme_bw()
setwd("/Volumes/FB-LIP/Plasticity/STUDIES/Sarah/Misc/AdventOfCode2022/day2")
dat <- readLines("data.txt")
dat
dat <- read.csv("data.txt")
dat
names(dat)
library(tidyverse)
dat <- read.csv("data.txt", header = F)
dat
names(dat)
dat %>%
separate(V1, c("opp", "me"), " ")
outcome <- matrix(c(3, 6, 0),
c(0, 3, 6),
c(6, 0, 3),
nrow = 3, ncol = 3)
matrix(c(c(3, 6, 0),
c(0, 3, 6),
c(6, 0, 3)),
nrow = 3, ncol = 3)
outcome <- data.frame(X = c(3, 0, 6),
Y = c(6, 3, 0),
Z = c(0, 6, 3))
outcome
row.names(outcome) <- c("A", "B", "C")
outcome
outcome[me, opp]
dat %>%
mutate(pointsShape = case_when("me" == "X" ~ 1,
"me" == "Y" ~ 2,
"me" == "Z" ~ 3),
pointsOutcome = outcome[me, opp])
dat
dat %>%
mutate(pointsShape = case_when("me" == "X" ~ 1,
"me" == "Y" ~ 2,
"me" == "Z" ~ 3),
pointsOutcome = outcome[as.character(me), as.character(opp)])
dat
names(dat)
dat <- read.csv("data.txt", header = F)
dat <- dat %>%
separate(V1, c("opp", "me"), " ")
outcome <- data.frame(X = c(3, 0, 6),
Y = c(6, 3, 0),
Z = c(0, 6, 3))
row.names(outcome) <- c("A", "B", "C")
dat %>%
mutate(pointsShape = case_when("me" == "X" ~ 1,
"me" == "Y" ~ 2,
"me" == "Z" ~ 3),
pointsOutcome = outcome[as.character(me), as.character(opp)])
names(dat)
dat %>%
mutate(pointsShape = case_when("me" == "X" ~ 1,
"me" == "Y" ~ 2,
"me" == "Z" ~ 3),
pointsOutcome = outcome["me", "opp"])
dat %>%
mutate(pointsShape = case_when("me" == "X" ~ 1,
"me" == "Y" ~ 2,
"me" == "Z" ~ 3))
dat %>%
mutate(pointsShape = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3),
pointsOutcome = outcome["me", "opp"])
outcome["me", "opp"]
dat %>%
rowwise %>%
mutate(pointsShape = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3),
pointsOutcome = outcome["me", "opp"]))
dat %>%
rowwise %>%
mutate(pointsShape = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3),
pointsOutcome = outcome["me", "opp"])
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)
)
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3),
pointsOutcome = outcome["me", "opp"])
outcome["me", "opp"]
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)) %>%
rowwise() %>%
mutate(pointsOutcome = outcome["me", "opp"])
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)) %>%
rowwise() %>%
mutate(pointsOutcome = 1)
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)) %>%
rowwise() %>%
mutate(pointsOutcome = outcome[me, opp])
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3),
pointsOutcome = outcome[me, opp])
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)) %>%
rowwise() %>%
mutate(pointsOutcome = outcome[me, opp])
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)) %>%
rowwise() %>%
mutate(pointsOutcome = outcome[opp, me])
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)) %>%
rowwise() %>%
mutate(pointsOutcome = outcome[opp, me],
totalPoints = me + pointsOutcome)
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)) %>%
rowwise() %>%
mutate(pointsOutcome = outcome[opp, me],
totalPoints = me + pointsOutcome) %>%
summarise(totalPoints = sum(totalPoints))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)) %>%
rowwise() %>%
mutate(pointsOutcome = outcome[opp, me],
totalPoints = me + pointsOutcome) %>%
ungroup() %>%
summarise(totalPoints = sum(totalPoints))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 ~ opp + 1))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1)) %>%
rowwise() %>%
mutate(totalPoints = me + chosen) %>%
ungroup() %>%
summarise(totalPoints = sum(totalPoints))
dat <- data.frame(opp = c("A", "B", "C"),
me = c("Y", "X", "Z"))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1)) %>%
rowwise() %>%
mutate(totalPoints = me + chosen) %>%
ungroup() %>%
summarise(totalPoints = sum(totalPoints))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1))
dat <- read.csv("data.txt", header = F)
dat <- dat %>%
separate(V1, c("opp", "me"), " ")
outcome <- data.frame(X = c(3, 0, 6),
Y = c(6, 3, 0),
Z = c(0, 6, 3))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 1,
me == "Y" ~ 2,
me == "Z" ~ 3)) %>%
rowwise() %>%
mutate(pointsOutcome = outcome[opp, me],
totalPoints = me + pointsOutcome) %>%
ungroup() %>%
summarise(totalPoints = sum(totalPoints))
# --- Part Two ---
# dat <- data.frame(opp = c("A", "B", "C"),
#                   me = c("Y", "X", "Z"))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1)) %>%
rowwise() %>%
mutate(totalPoints = me + chosen) %>%
ungroup() %>%
summarise(totalPoints = sum(totalPoints))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1)) %>%
# rowwise() %>%
mutate(totalPoints = me + chosen)
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 ~ opp - 1,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1)) %>%
mutate(totalPoints = me + chosen) %>%
summarise(totalPoints = sum(totalPoints))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 & opp != 1 ~ opp - 1,
me == 0 & opp == 1 ~ opp - 3,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1)) %>%
mutate(totalPoints = me + chosen) %>%
summarise(totalPoints = sum(totalPoints))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 & opp != 1 ~ opp - 1,
me == 0 & opp == 1 ~ opp - 3,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1))
dat %>%
mutate(opp = case_when(opp == "A" ~ 1,
opp == "B" ~ 2,
opp == "C" ~ 3),
me = case_when(me == "X" ~ 0,
me == "Y" ~ 3,
me == "Z" ~ 6),
chosen = case_when(me == 0 & opp != 1 ~ opp - 1,
me == 0 & opp == 1 ~ 3,
me == 3 ~ opp,
me == 6 & opp != 3 ~ opp + 1,
me == 6 & opp == 3 ~ 1)) %>%
mutate(totalPoints = me + chosen) %>%
summarise(totalPoints = sum(totalPoints))
